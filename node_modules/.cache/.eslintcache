[{"/Users/cihattasci/Desktop/product-list/src/index.js":"1","/Users/cihattasci/Desktop/product-list/src/App.js":"2","/Users/cihattasci/Desktop/product-list/src/reportWebVitals.js":"3","/Users/cihattasci/Desktop/product-list/src/product/index.js":"4","/Users/cihattasci/Desktop/product-list/src/product/Description.js":"5","/Users/cihattasci/Desktop/product-list/src/product/description.js":"6","/Users/cihattasci/Desktop/4d5135c731d65931118bfd42bb63ebc9/src/index.js":"7","/Users/cihattasci/Desktop/4d5135c731d65931118bfd42bb63ebc9/src/App.js":"8","/Users/cihattasci/Desktop/4d5135c731d65931118bfd42bb63ebc9/src/reportWebVitals.js":"9","/Users/cihattasci/Desktop/4d5135c731d65931118bfd42bb63ebc9/src/product/index.js":"10","/Users/cihattasci/Desktop/4d5135c731d65931118bfd42bb63ebc9/src/product/description.js":"11"},{"size":500,"mtime":1647011172076,"results":"12","hashOfConfig":"13"},{"size":4209,"mtime":1647077978885,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1647011172077,"results":"15","hashOfConfig":"13"},{"size":616,"mtime":1647077474815,"results":"16","hashOfConfig":"13"},{"size":1733,"mtime":1647038193986,"results":"17","hashOfConfig":"13"},{"size":6563,"mtime":1647077584777,"results":"18","hashOfConfig":"13"},{"size":500,"mtime":1647011172076,"results":"19","hashOfConfig":"20"},{"size":4173,"mtime":1647080408869,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1647011172077,"results":"22","hashOfConfig":"20"},{"size":616,"mtime":1647077474815,"results":"23","hashOfConfig":"20"},{"size":6563,"mtime":1647077584777,"results":"24","hashOfConfig":"20"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ydgv25",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bsjgj",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/cihattasci/Desktop/product-list/src/index.js",[],[],["63","64"],"/Users/cihattasci/Desktop/product-list/src/App.js",["65","66","67"],[],"import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Product from './product'\n\nconst App = () => {\n  const [input, setInput] = useState(\"\")\n  const [error, setError] = useState(null)\n  const [products, setProducts] = useState([])\n  const [filteredDataSource, setFilteredDataSource] = useState([]);\n  const [pageNumber, setPageNumber] = useState(null);\n  const [selectedPage, setSelectedPage] = useState(0);\n  const [currentProducts, setCurrentProducts] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n\n  const itemNumberPerPage = 10;\n\n  useEffect(() => {\n    const obj = {  \n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'x-access-token': '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',\n      },\n    }\n    fetch('https://teknasyon.netlify.app/.netlify/functions/products', obj)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setProducts(result?.products)\n          setFilteredDataSource(result?.products)\n          setPageNumber(Math.ceil(result?.products?.length / itemNumberPerPage))\n          setCurrentProducts(result?.products?.slice(selectedPage * itemNumberPerPage, ((selectedPage + 1) * itemNumberPerPage)))\n          setSelectedData(result?.products?.slice(selectedPage * itemNumberPerPage, ((selectedPage + 1) * itemNumberPerPage)))\n        },\n        (error) => {\n          setError(error);\n        }\n      )\n  }, [])\n\n  useEffect(() => {\n    const data = filteredDataSource?.slice(selectedPage * itemNumberPerPage, ((selectedPage + 1) * itemNumberPerPage))\n    setSelectedData(data)\n    setCurrentProducts(data)\n  }, [selectedPage])\n\n  const handleChange = event => {\n    if (event.target.value) {\n      const newData = products?.filter(product => {\n          const itemData = product?.title\n              ? product?.title?.toUpperCase()\n              : ''.toUpperCase();\n          const textData = event.target.value.toUpperCase();\n          return itemData.indexOf(textData) > -1;\n        }\n      );\n      setFilteredDataSource(newData);\n      setSelectedData(newData);\n    } else {\n      const data = filteredDataSource?.slice(selectedPage * itemNumberPerPage, ((selectedPage + 1) * itemNumberPerPage))\n      setFilteredDataSource(products);\n      setSelectedData(data);\n    }\n    \n    setInput(event.target.value);\n  }\n\n  if(error) {\n    return (\n      <div style={styles.smtWentWrong}>Bir şeyler ters gitti!!</div>\n    )\n  }\n\n  return (\n    <>\n      <div style={styles.searchContainer}>\n        <input placeholder=\"Bir şey arayın\" style={styles.main} value={input} onChange={handleChange} />\n      </div>\n      {!filteredDataSource?.length && <p style={{textAlign: 'center'}}>Ürün Bulunamadı</p>}\n      <div style={styles.renderProductContainer}>\n        {selectedData?.map(product => {\n          return (\n            <div style={{marginLeft: 10, width: '20%', marginTop: 10}}>\n              <Product product={product} />\n            </div>\n          )\n        })}\n      </div>\n      {input === '' &&\n        <div style={styles.noFoundContainer}>\n          {Array.from({length: pageNumber}, (item, index) => {\n            return (\n              <div style={{cursor: 'pointer'}} onClick={() => {\n                setSelectedPage(index);\n              }}>\n                <p style={styles.paginationText}>{index + 1}</p>\n              </div>\n            )\n          })}\n        </div>\n      }\n    </>\n  );\n}\n\nconst styles = {\n  smtWentWrong: {alignSelf: 'center', justifyContent: 'center', display: 'flex', marginTop: '50%'},\n  main: {borderRadius: 10, marginTop: 10, alignSelf: 'center', justifyContent: 'center', width: '50%', height: 30, fontSize: 13},\n  searchContainer: {flexDirection: 'row', display: 'flex', width: '100%', marginTop: 10, justifyContent: 'center', alignItems: 'center'},\n  renderProductContainer: {flexDirection: 'row', display: 'flex', flexWrap: 'wrap', justifyContent: 'center'},\n  noFoundContainer: {flexDirection: 'row', display: 'flex', justifyContent: 'center'},\n  paginationText: {textAlign: 'center', marginLeft: 10, border: '1px solid blue', borderRadius: '5px', padding: '5px'}\n}\n\nexport default App;\n","/Users/cihattasci/Desktop/product-list/src/reportWebVitals.js",[],[],"/Users/cihattasci/Desktop/product-list/src/product/index.js",[],[],"/Users/cihattasci/Desktop/product-list/src/product/Description.js",[],[],["68","69"],"/Users/cihattasci/Desktop/product-list/src/product/description.js",["70"],[],"import React, {useState, useEffect} from 'react'\nimport Modal from \"react-modal\";\n\nconst Description = ({ product }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [images, setImages] = useState([]);\n  const [quantity, setQuantity] = useState(1);\n\n  const toggleModal = () => {\n    setIsOpen(!isOpen);\n  }\n\n  useEffect(() => {\n      let images = [];\n      for (let i = 0; i < product?.images?.length; i++) {\n        images.push(product?.images[i]?.src)\n      }\n      setImages(images);\n  }, [])\n\n  const incrementQuantity = () => {\n    setQuantity(quantity + 1);\n  }\n\n  const decrementQuantity = () => {\n    quantity && setQuantity(quantity - 1);\n  } \n\n  return (\n    <div style={styles.main}>\n        <h3 style={styles.colorWhite}>{product?.title}</h3>\n        <p style={styles.colorWhite}>{product?.variants[0]?.price}₺</p>\n        <div onClick={toggleModal} style={styles.openDetailButton}>\n            <p style={styles.buttonText}>Ürün Detayı</p>\n        </div>\n\n        <Modal isOpen={isOpen} onRequestClose={toggleModal}>\n            <div style={styles.modal}>\n                <p onClick={toggleModal} style={styles.closeText}>Kapat</p>\n                <div style={styles.imageContainer}>\n                    {images?.map(image => <img alt={`${image}`} src={image} style={styles.image} /> )}\n                </div>\n                <div style={styles.descriptionContainer}>\n                    <h1 style={styles.colorRed}>{product?.title}</h1>\n                    <div style={styles.itemRowDescriptionContainer}>\n                        <h4>Satıcı: </h4>\n                        <p style={{marginLeft: '2%'}}>{product?.vendor}</p>\n                    </div>\n                    <div style={styles.itemRowDescriptionContainer}>\n                        <h4>Stok Durumu: </h4>\n                        <p style={{color: product?.status ? 'green' : 'red', marginLeft: '2%'}}>{product?.status ? 'Stokta Mevcut' : 'Stokta Bulunmuyor'}</p>\n                    </div>\n                    {product?.options?.map((option, index) => {\n                        return (\n                            <div key={index} style={styles.optionItemContainer}>\n                                <h4>{option?.name}: </h4>\n                                {product?.options[index]?.values?.map((value, i) => {\n                                    return (\n                                        <div key={i} style={styles.optionValueContainer}>\n                                            <p style={styles.optionValueText}>{value}</p>\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        )\n                    })}\n                    <div style={styles.itemRowDescriptionContainer}>\n                        <h4 style={{marginRight: '2%'}}>Ürün Adeti:</h4>\n                        <div onClick={decrementQuantity} style={styles.decrementQuantityContainer}>\n                            <p>-</p>\n                        </div>\n                        <div style={styles.quantityContainer}>\n                            <p style={styles.quantityText}>{quantity}</p>\n                        </div>\n                        <div onClick={incrementQuantity} style={styles.incrementQuantityContainer}>\n                            <p>+</p>\n                        </div>\n                    </div>\n                    <div style={styles.buttonContainer}>\n                        <div onClick={() => !quantity && alert('Ürün Adedi Belirleyiniz')} style={styles.addCartButton}>\n                            <p style={styles.buttonText}>Sepete Ekle</p>\n                        </div>\n                        <div style={styles.addWishlistButton}>\n                            <p style={styles.buttonText}>İstek Listesine Ekle</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n      </Modal>\n    </div>\n  )\n}\n\nconst styles = {\n    main: {display: 'flex', justifyContent: 'space-between', flex: 1, flexDirection: 'column'},\n    colorWhite: {color: 'white'},\n    openDetailButton: {display: 'flex', justifyContent: 'center', backgroundColor: 'red', width: '100%', height: '10%', borderRadius: '10px', cursor: 'pointer'},\n    buttonText: {textAlign: 'center', color: 'white', fontSize: '80%'},\n    modal: {display: 'flex', flexDirection: 'row', height: '100%', alignSelf: 'center'},\n    closeText: {position: 'absolute', top: 0, right: 15, cursor: 'pointer'},\n    imageContainer: {display: 'flex', width: '30%', flexDirection: 'column', justifyContent: 'space-evenly', marginLeft: '5%'},\n    image: {width: '100%', height: '40%', borderRadius: '10px', marginTop: 10, marginBottom: 10, border: '1px solid black'},\n    descriptionContainer: {display: 'flex', flexDirection: 'column', justifyContent: 'space-evenly', marginLeft: '15%', width: '40%'},\n    colorRed: {color: 'red'},\n    itemRowDescriptionContainer: {display: 'flex', flexDirection: 'row', alignItems: 'center'},\n    optionItemContainer: {flexDirection: 'row', display: 'flex'},\n    optionValueContainer: {flexDirection: 'row', display: 'flex',  marginLeft: '2%', width: 'auto', justifyContent: 'center'},\n    optionValueText: {fontSize: '13px', border: '1px solid', borderRadius: 10, justifyContent: 'center', alignItems: 'center', display: 'flex', paddingLeft: 2, paddingRight: 2},\n    decrementQuantityContainer: {width: '10%', height: 'auto', backgroundColor: '#d9d9d9', borderTopLeftRadius: 10, borderBottomLeftRadius: 10, alignItems: 'center', display: 'flex', justifyContent: 'center', cursor: 'pointer'},\n    quantityContainer: {width: '10%', height: 'auto', backgroundColor: '#5a4844', alignItems: 'center', display: 'flex', justifyContent: 'center'},\n    quantityText: {marginLeft: '2%', marginRight: '2%', color: 'white'},\n    incrementQuantityContainer: {width: '10%', height: 'auto', backgroundColor: '#d9d9d9', borderTopRightRadius: 10, borderBottomRightRadius: 10, alignItems: 'center', display: 'flex', justifyContent: 'center', cursor: 'pointer'},\n    buttonContainer: {flexDirection: 'row', display: 'flex'},\n    addCartButton: {display: 'flex', justifyContent: 'center', alignItems: 'center', backgroundColor: 'green', width: '40%', height: '75%', borderRadius: '10px', cursor: 'pointer'},\n    addWishlistButton: {display: 'flex', justifyContent: 'center', alignItems: 'center', backgroundColor: 'gray', width: '40%', height: '75%', borderRadius: '10px', cursor: 'pointer', marginLeft: '5%'}\n}\n\nexport default Description","/Users/cihattasci/Desktop/4d5135c731d65931118bfd42bb63ebc9/src/index.js",[],[],"/Users/cihattasci/Desktop/4d5135c731d65931118bfd42bb63ebc9/src/App.js",["71","72","73"],[],"import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Product from './product'\n\nconst App = () => {\n  const [input, setInput] = useState(\"\")\n  const [error, setError] = useState(null)\n  const [products, setProducts] = useState([])\n  const [filteredDataSource, setFilteredDataSource] = useState([]);\n  const [pageNumber, setPageNumber] = useState(null);\n  const [selectedPage, setSelectedPage] = useState(0);\n  const [currentProducts, setCurrentProducts] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n\n  const itemNumberPerPage = 10;\n\n  useEffect(() => {\n    const obj = {  \n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'x-access-token': process.env.REACT_APP_ACCESS_TOKEN,\n      },\n    }\n    fetch(process.env.REACT_APP_API_KEY, obj)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setProducts(result?.products)\n          setFilteredDataSource(result?.products)\n          setPageNumber(Math.ceil(result?.products?.length / itemNumberPerPage))\n          setCurrentProducts(result?.products?.slice(selectedPage * itemNumberPerPage, ((selectedPage + 1) * itemNumberPerPage)))\n          setSelectedData(result?.products?.slice(selectedPage * itemNumberPerPage, ((selectedPage + 1) * itemNumberPerPage)))\n        },\n        (error) => {\n          setError(error);\n        }\n      )\n  }, [])\n\n  useEffect(() => {\n    const data = filteredDataSource?.slice(selectedPage * itemNumberPerPage, ((selectedPage + 1) * itemNumberPerPage))\n    setSelectedData(data)\n    setCurrentProducts(data)\n  }, [selectedPage])\n\n  const handleChange = event => {\n    if (event.target.value) {\n      const newData = products?.filter(product => {\n          const itemData = product?.title\n              ? product?.title?.toUpperCase()\n              : ''.toUpperCase();\n          const textData = event.target.value.toUpperCase();\n          return itemData.indexOf(textData) > -1;\n        }\n      );\n      setFilteredDataSource(newData);\n      setSelectedData(newData);\n    } else {\n      const data = filteredDataSource?.slice(selectedPage * itemNumberPerPage, ((selectedPage + 1) * itemNumberPerPage))\n      setFilteredDataSource(products);\n      setSelectedData(data);\n    }\n    \n    setInput(event.target.value);\n  }\n\n  if(error) {\n    return (\n      <div style={styles.smtWentWrong}>Bir şeyler ters gitti!!</div>\n    )\n  }\n\n  return (\n    <>\n      <div style={styles.searchContainer}>\n        <input placeholder=\"Bir şey arayın\" style={styles.main} value={input} onChange={handleChange} />\n      </div>\n      {!filteredDataSource?.length && <p style={{textAlign: 'center'}}>Ürün Bulunamadı</p>}\n      <div style={styles.renderProductContainer}>\n        {selectedData?.map(product => {\n          return (\n            <div style={{marginLeft: 10, width: '20%', marginTop: 10}}>\n              <Product product={product} />\n            </div>\n          )\n        })}\n      </div>\n      {input === '' &&\n        <div style={styles.noFoundContainer}>\n          {Array.from({length: pageNumber}, (item, index) => {\n            return (\n              <div style={{cursor: 'pointer'}} onClick={() => {\n                setSelectedPage(index);\n              }}>\n                <p style={styles.paginationText}>{index + 1}</p>\n              </div>\n            )\n          })}\n        </div>\n      }\n    </>\n  );\n}\n\nconst styles = {\n  smtWentWrong: {alignSelf: 'center', justifyContent: 'center', display: 'flex', marginTop: '30%'},\n  main: {borderRadius: 10, marginTop: 10, alignSelf: 'center', justifyContent: 'center', width: '50%', height: 30, fontSize: 13},\n  searchContainer: {flexDirection: 'row', display: 'flex', width: '100%', marginTop: 10, justifyContent: 'center', alignItems: 'center'},\n  renderProductContainer: {flexDirection: 'row', display: 'flex', flexWrap: 'wrap', justifyContent: 'center'},\n  noFoundContainer: {flexDirection: 'row', display: 'flex', justifyContent: 'center'},\n  paginationText: {textAlign: 'center', marginLeft: 10, border: '1px solid blue', borderRadius: '5px', padding: '5px'}\n}\n\nexport default App;\n","/Users/cihattasci/Desktop/4d5135c731d65931118bfd42bb63ebc9/src/reportWebVitals.js",[],[],"/Users/cihattasci/Desktop/4d5135c731d65931118bfd42bb63ebc9/src/product/index.js",[],[],"/Users/cihattasci/Desktop/4d5135c731d65931118bfd42bb63ebc9/src/product/description.js",["74"],[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":12,"column":10,"nodeType":"81","messageId":"82","endLine":12,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":40,"column":6,"nodeType":"85","endLine":40,"endColumn":8,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":46,"column":6,"nodeType":"85","endLine":46,"endColumn":20,"suggestions":"88"},{"ruleId":"75","replacedBy":"89"},{"ruleId":"77","replacedBy":"90"},{"ruleId":"83","severity":1,"message":"91","line":19,"column":6,"nodeType":"85","endLine":19,"endColumn":8,"suggestions":"92"},{"ruleId":"79","severity":1,"message":"80","line":12,"column":10,"nodeType":"81","messageId":"82","endLine":12,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":40,"column":6,"nodeType":"85","endLine":40,"endColumn":8,"suggestions":"93"},{"ruleId":"83","severity":1,"message":"87","line":46,"column":6,"nodeType":"85","endLine":46,"endColumn":20,"suggestions":"94"},{"ruleId":"83","severity":1,"message":"91","line":19,"column":6,"nodeType":"85","endLine":19,"endColumn":8,"suggestions":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'currentProducts' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedPage'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentProducts' needs the current value of 'selectedPage'.","ArrayExpression",["98"],"React Hook useEffect has a missing dependency: 'filteredDataSource'. Either include it or remove the dependency array.",["99"],["96"],["97"],"React Hook useEffect has a missing dependency: 'product?.images'. Either include it or remove the dependency array.",["100"],["101"],["102"],["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"104","fix":"110"},{"desc":"106","fix":"111"},{"desc":"108","fix":"112"},"Update the dependencies array to be: [selectedPage]",{"range":"113","text":"114"},"Update the dependencies array to be: [filteredDataSource, selectedPage]",{"range":"115","text":"116"},"Update the dependencies array to be: [product?.images]",{"range":"117","text":"118"},{"range":"119","text":"114"},{"range":"120","text":"116"},{"range":"121","text":"118"},[1480,1482],"[selectedPage]",[1684,1698],"[filteredDataSource, selectedPage]",[504,506],"[product?.images]",[1444,1446],[1648,1662],[504,506]]